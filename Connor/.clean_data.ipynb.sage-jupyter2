{"backend_state":"running","connection_file":"/projects/4effcd42-8465-43b7-9c63-162fa4ffa93e/.local/share/jupyter/runtime/kernel-9dc2784b-398b-4d41-948e-91140b0ab1f0.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657301174071,"exec_count":11,"id":"d8cf1f","input":"numeric_variables = ['BMI', 'PhysicalHealth', 'MentalHealth']\nfor i in numeric_variables:\n    plt.figure(figsize=(2, 2), dpi=200)\n    sns.boxplot(data = data, x = 'HeartDisease', y = i)\n    plt.show()","kernel":"ds_env","output":{"0":{"data":{"image/png":"c4529a18dd5238375b3d434008af3cdbbfff7412","text/plain":"<Figure size 400x400 with 1 Axes>"},"metadata":{"needs_background":"light"}},"1":{"data":{"image/png":"47bbae2daee57e05f66cd5fc9affbc0c04440597","text/plain":"<Figure size 400x400 with 1 Axes>"},"metadata":{"needs_background":"light"}},"2":{"data":{"image/png":"723db0b12f3f93dbba12dc1be128643973751ad4","text/plain":"<Figure size 400x400 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":13,"start":1657301172128,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301174343,"exec_count":12,"id":"ef145d","input":"import plotly.express as px","kernel":"ds_env","pos":14,"start":1657301174086,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301175942,"exec_count":13,"id":"5a1b86","input":"hd_yes = data[data['HeartDisease'] == \"Yes\"]\npx.pie(hd_yes, names = \"AgeCategory\")","kernel":"ds_env","output":{"0":{"data":{"iframe":"a37eded145bc3601c7f6ae9ec41c56f326415a2b"}}},"pos":15,"start":1657301174360,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301175960,"exec_count":14,"id":"eb3576","input":"# this visualization shows the pecentage of people in our data set with heart disease in each age category. It shows that the amount of people with heart disease gradually goes down with the exception of one outlier (the 65-69 category).","kernel":"ds_env","pos":16,"start":1657301175955,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301177038,"exec_count":15,"id":"19c174","input":"df = data[~data.isin(['?'])]","kernel":"ds_env","pos":17,"start":1657301175978,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301181125,"exec_count":16,"id":"c256a4","input":"# transform data to numeric because ca and thal are object datatypes\n# data = df.apply(pd.to_numeric)\nprint(data.dtypes) # Brian- ^ Data should already be numeric\n# plot histograms for each variable\ndata.hist(figsize = (15, 15))\nplt.show()","kernel":"ds_env","output":{"0":{"name":"stdout","text":"HeartDisease                        int64\nBMI                               float64\nSmoking                             int64\nAlcoholDrinking                     int64\nStroke                              int64\nPhysicalHealth                    float64\nMentalHealth                      float64\nDiffWalking                         int64\nSex                                 int64\nAgeCategory                         int64\nPhysicalActivity                    int64\nGenHealth                           int64\nSleepTime                         float64\nAsthma                              int64\nKidneyDisease                       int64\nSkinCancer                          int64\nAmerican Indian/Alaskan Native      uint8\nAsian                               uint8\nBlack                               uint8\nHispanic                            uint8\nOther                               uint8\nWhite                               uint8\nNo                                  uint8\nNo, borderline diabetes             uint8\nYes                                 uint8\nYes (during pregnancy)              uint8\ndtype: object\n"},"1":{"data":{"image/png":"239f427c9bf438ec46e477fb3b23b4caa142cb4d","text/plain":"<Figure size 1080x1080 with 30 Axes>"},"metadata":{"needs_background":"light"}}},"pos":18,"start":1657301177042,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301181198,"exec_count":17,"id":"c22036","input":"X = data.iloc[:,1:13] # Brian- I changed the 0 to 1, we want to exclude the 'HeartDisease' column in X\ny = data.iloc[:,-1]\nX.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>BMI</th>\n      <th>Smoking</th>\n      <th>AlcoholDrinking</th>\n      <th>Stroke</th>\n      <th>PhysicalHealth</th>\n      <th>MentalHealth</th>\n      <th>DiffWalking</th>\n      <th>Sex</th>\n      <th>AgeCategory</th>\n      <th>PhysicalActivity</th>\n      <th>GenHealth</th>\n      <th>SleepTime</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.60</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>7</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20.34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>3</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>26.58</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20.0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>1</td>\n      <td>8.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>24.21</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11</td>\n      <td>0</td>\n      <td>2</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>23.71</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>28.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>3</td>\n      <td>8.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     BMI  Smoking  AlcoholDrinking  Stroke  PhysicalHealth  MentalHealth  \\\n0  16.60        1                0       0             3.0          30.0   \n1  20.34        0                0       1             0.0           0.0   \n2  26.58        1                0       0            20.0          30.0   \n3  24.21        0                0       0             0.0           0.0   \n4  23.71        0                0       0            28.0           0.0   \n\n   DiffWalking  Sex  AgeCategory  PhysicalActivity  GenHealth  SleepTime  \n0            0    1            7                 1          3        5.0  \n1            0    1           12                 1          3        7.0  \n2            0    0            9                 1          1        8.0  \n3            0    1           11                 0          2        6.0  \n4            1    1            4                 1          3        8.0  "},"exec_count":17}},"pos":19,"start":1657301181152,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301181390,"exec_count":18,"id":"9312ae","input":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, shuffle = True)","kernel":"ds_env","pos":20,"start":1657301181218,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301181408,"exec_count":19,"id":"307346","input":"# There are 4 classes so we need to one-hot encode them\n# Brian- don't think we need this either, 'HeartDisease' has already been encoded to 1/0\n# y_train = to_categorical(y_train, 2)\n# y_test = to_categorical(y_test, 2)\ny_train[:5], y_test[:5]","kernel":"ds_env","output":{"0":{"data":{"text/plain":"(273991    0\n 138596    0\n 232113    0\n 47405     0\n 292723    0\n Name: Yes (during pregnancy), dtype: uint8,\n 36434     0\n 210071    0\n 140559    0\n 298924    0\n 7912      0\n Name: Yes (during pregnancy), dtype: uint8)"},"exec_count":19}},"pos":21,"start":1657301181395,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305512619,"exec_count":7,"id":"1d2db5","input":"# Add your imports here!\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom keras.utils.np_utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom tensorflow.keras.optimizers import Adam\nfrom keras.callbacks import ModelCheckpoint\nfrom sklearn.metrics import classification_report, accuracy_score","kernel":"ds_env","output":{"0":{"name":"stderr","text":"2022-07-08 18:38:31.122345: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\n2022-07-08 18:38:31.122384: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n"}},"pos":0,"start":1657305509094,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305512639,"exec_count":8,"id":"268430","input":"# pip install keras","kernel":"ds_env","pos":2,"start":1657305512636,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305512647,"exec_count":9,"id":"eecc3b","input":"import sys\n\n# !$sys.executable -m pip install tensorflow","kernel":"ds_env","pos":3,"start":1657305512643,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513247,"exec_count":10,"id":"ee1486","input":"# Read data\ndata = pd.read_csv(\"Data/heart_2020_cleaned.csv\")","kernel":"ds_env","pos":5,"start":1657305512659,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513275,"exec_count":11,"id":"33610e","input":"data['Diabetic'].unique()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array(['Yes', 'No', 'No, borderline diabetes', 'Yes (during pregnancy)'],\n      dtype=object)"},"exec_count":11}},"pos":6,"scrolled":true,"start":1657305513264,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513691,"exec_count":12,"id":"6f5b8c","input":"data[\"Smoking\"] = data[\"Smoking\"].map(dict(Yes=1, No=0))\ndata[\"AlcoholDrinking\"] = data[\"AlcoholDrinking\"].map(dict(Yes=1, No=0))\ndata[\"DiffWalking\"] = data[\"DiffWalking\"].map(dict(Yes=1, No=0))\ndata[\"Stroke\"] = data[\"Stroke\"].map(dict(Yes=1, No=0))\n# data[\"Diabetic\"] = data[\"Diabetic\"].map(dict(Yes=1, No=0))\ndata[\"PhysicalActivity\"] = data[\"PhysicalActivity\"].map(dict(Yes=1, No=0))\ndata[\"Asthma\"] = data[\"Asthma\"].map(dict(Yes=1, No=0))\ndata[\"KidneyDisease\"] = data[\"KidneyDisease\"].map(dict(Yes=1, No=0))\ndata[\"SkinCancer\"] = data[\"SkinCancer\"].map(dict(Yes=1, No=0))\ndata[\"Sex\"] = data[\"Sex\"].map(dict(Female=1, Male=0))\ndata[\"HeartDisease\"] = data[\"HeartDisease\"].map(dict(Yes=1, No=0))\ndata[\"AgeCategory\"] = data[\"AgeCategory\"].map({\"18-24\":0, \"25-29\":1, \"30-34\":2, \"35-39\":3, \"40-44\":4, \"45-49\":5, \"50-54\":6, \"55-59\":7, \"60-64\":8, \"65-69\":9, \"70-74\":10, \"75-79\":11, \"80 or older\":12})\ndata[\"GenHealth\"] = data[\"GenHealth\"].map({\"Poor\":0, \"Fair\":1, \"Good\":2, \"Very good\":3, \"Excellent\":4})","kernel":"ds_env","pos":7,"start":1657305513283,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513739,"exec_count":13,"id":"e67fc2","input":"race_dummies = pd.get_dummies(data[\"Race\"])\ndiabetes_dummies = pd.get_dummies(data['Diabetic'])","kernel":"ds_env","pos":8,"start":1657305513708,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513826,"exec_count":14,"id":"bd1c68","input":"data = pd.concat([data, race_dummies], axis = 1)\ndata = pd.concat([data, diabetes_dummies], axis = 1)\ndata = data.drop(columns = 'Race')\ndata = data.drop(columns = 'Diabetic')\ndata.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['HeartDisease', 'BMI', 'Smoking', 'AlcoholDrinking', 'Stroke',\n       'PhysicalHealth', 'MentalHealth', 'DiffWalking', 'Sex', 'AgeCategory',\n       'PhysicalActivity', 'GenHealth', 'SleepTime', 'Asthma', 'KidneyDisease',\n       'SkinCancer', 'American Indian/Alaskan Native', 'Asian', 'Black',\n       'Hispanic', 'Other', 'White', 'No', 'No, borderline diabetes', 'Yes',\n       'Yes (during pregnancy)'],\n      dtype='object')"},"exec_count":14}},"pos":9,"start":1657305513748,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513891,"exec_count":15,"id":"5cebf5","input":"data","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>HeartDisease</th>\n      <th>BMI</th>\n      <th>Smoking</th>\n      <th>AlcoholDrinking</th>\n      <th>Stroke</th>\n      <th>PhysicalHealth</th>\n      <th>MentalHealth</th>\n      <th>DiffWalking</th>\n      <th>Sex</th>\n      <th>AgeCategory</th>\n      <th>...</th>\n      <th>American Indian/Alaskan Native</th>\n      <th>Asian</th>\n      <th>Black</th>\n      <th>Hispanic</th>\n      <th>Other</th>\n      <th>White</th>\n      <th>No</th>\n      <th>No, borderline diabetes</th>\n      <th>Yes</th>\n      <th>Yes (during pregnancy)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>16.60</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3.0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>7</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>20.34</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>26.58</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20.0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>24.21</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>23.71</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>28.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>319790</th>\n      <td>1</td>\n      <td>27.41</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>8</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>319791</th>\n      <td>0</td>\n      <td>29.84</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>319792</th>\n      <td>0</td>\n      <td>24.24</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>319793</th>\n      <td>0</td>\n      <td>32.81</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>319794</th>\n      <td>0</td>\n      <td>46.56</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>319795 rows × 26 columns</p>\n</div>","text/plain":"        HeartDisease    BMI  Smoking  AlcoholDrinking  Stroke  PhysicalHealth  \\\n0                  0  16.60        1                0       0             3.0   \n1                  0  20.34        0                0       1             0.0   \n2                  0  26.58        1                0       0            20.0   \n3                  0  24.21        0                0       0             0.0   \n4                  0  23.71        0                0       0            28.0   \n...              ...    ...      ...              ...     ...             ...   \n319790             1  27.41        1                0       0             7.0   \n319791             0  29.84        1                0       0             0.0   \n319792             0  24.24        0                0       0             0.0   \n319793             0  32.81        0                0       0             0.0   \n319794             0  46.56        0                0       0             0.0   \n\n        MentalHealth  DiffWalking  Sex  AgeCategory  ...  \\\n0               30.0            0    1            7  ...   \n1                0.0            0    1           12  ...   \n2               30.0            0    0            9  ...   \n3                0.0            0    1           11  ...   \n4                0.0            1    1            4  ...   \n...              ...          ...  ...          ...  ...   \n319790           0.0            1    0            8  ...   \n319791           0.0            0    0            3  ...   \n319792           0.0            0    1            5  ...   \n319793           0.0            0    1            1  ...   \n319794           0.0            0    1           12  ...   \n\n        American Indian/Alaskan Native  Asian  Black  Hispanic  Other  White  \\\n0                                    0      0      0         0      0      1   \n1                                    0      0      0         0      0      1   \n2                                    0      0      0         0      0      1   \n3                                    0      0      0         0      0      1   \n4                                    0      0      0         0      0      1   \n...                                ...    ...    ...       ...    ...    ...   \n319790                               0      0      0         1      0      0   \n319791                               0      0      0         1      0      0   \n319792                               0      0      0         1      0      0   \n319793                               0      0      0         1      0      0   \n319794                               0      0      0         1      0      0   \n\n        No  No, borderline diabetes  Yes  Yes (during pregnancy)  \n0        0                        0    1                       0  \n1        1                        0    0                       0  \n2        0                        0    1                       0  \n3        1                        0    0                       0  \n4        1                        0    0                       0  \n...     ..                      ...  ...                     ...  \n319790   0                        0    1                       0  \n319791   1                        0    0                       0  \n319792   1                        0    0                       0  \n319793   1                        0    0                       0  \n319794   1                        0    0                       0  \n\n[319795 rows x 26 columns]"},"exec_count":15}},"pos":11,"start":1657305513846,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305513913,"exec_count":16,"id":"4b5ee2","input":"data.isna().sum()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"HeartDisease                      0\nBMI                               0\nSmoking                           0\nAlcoholDrinking                   0\nStroke                            0\nPhysicalHealth                    0\nMentalHealth                      0\nDiffWalking                       0\nSex                               0\nAgeCategory                       0\nPhysicalActivity                  0\nGenHealth                         0\nSleepTime                         0\nAsthma                            0\nKidneyDisease                     0\nSkinCancer                        0\nAmerican Indian/Alaskan Native    0\nAsian                             0\nBlack                             0\nHispanic                          0\nOther                             0\nWhite                             0\nNo                                0\nNo, borderline diabetes           0\nYes                               0\nYes (during pregnancy)            0\ndtype: int64"},"exec_count":16}},"pos":12,"start":1657305513898,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305522917,"exec_count":17,"id":"7ec3d5","input":"# create model\nmodel = Sequential()\nmodel.add(Dense(10, input_dim=X.shape[1], kernel_initializer='normal', activation='relu'))\n#Brian- changed input_dim ^\nmodel.add(Dense(8, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(4, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(1, activation='softmax'))","kernel":"ds_env","output":{"0":{"name":"stderr","text":"2022-07-08 18:38:42.326402: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\n2022-07-08 18:38:42.326443: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)\n2022-07-08 18:38:42.326469: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (ae633b5eaedf): /proc/driver/nvidia/version does not exist\n2022-07-08 18:38:42.326709: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"},"1":{"ename":"NameError","evalue":"name 'X' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [17]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# create model\u001b[39;00m\n\u001b[1;32m      2\u001b[0m model \u001b[38;5;241m=\u001b[39m Sequential()\n\u001b[0;32m----> 3\u001b[0m model\u001b[38;5;241m.\u001b[39madd(Dense(\u001b[38;5;241m10\u001b[39m, input_dim\u001b[38;5;241m=\u001b[39m\u001b[43mX\u001b[49m\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m], kernel_initializer\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mnormal\u001b[39m\u001b[38;5;124m'\u001b[39m, activation\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrelu\u001b[39m\u001b[38;5;124m'\u001b[39m))\n\u001b[1;32m      4\u001b[0m \u001b[38;5;66;03m#Brian- changed input_dim ^\u001b[39;00m\n\u001b[1;32m      5\u001b[0m model\u001b[38;5;241m.\u001b[39madd(Dense(\u001b[38;5;241m8\u001b[39m, kernel_initializer\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mnormal\u001b[39m\u001b[38;5;124m'\u001b[39m, activation\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrelu\u001b[39m\u001b[38;5;124m'\u001b[39m))\n","\u001b[0;31mNameError\u001b[0m: name 'X' is not defined"]}},"pos":23,"start":1657305522330,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305524503,"exec_count":18,"id":"1b2b28","input":"model.summary()","kernel":"ds_env","output":{"0":{"ename":"ValueError","evalue":"This model has not yet been built. Build the model first by calling `build()` or by calling the model on a batch of data.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [18]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msummary\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/keras/engine/training.py:2869\u001b[0m, in \u001b[0;36mModel.summary\u001b[0;34m(self, line_length, positions, print_fn, expand_nested, show_trainable)\u001b[0m\n\u001b[1;32m   2847\u001b[0m \u001b[38;5;124;03m\"\"\"Prints a string summary of the network.\u001b[39;00m\n\u001b[1;32m   2848\u001b[0m \n\u001b[1;32m   2849\u001b[0m \u001b[38;5;124;03mArgs:\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2866\u001b[0m \u001b[38;5;124;03m    ValueError: if `summary()` is called before the model is built.\u001b[39;00m\n\u001b[1;32m   2867\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   2868\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mbuilt:\n\u001b[0;32m-> 2869\u001b[0m   \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m   2870\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThis model has not yet been built. \u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m   2871\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mBuild the model first by calling `build()` or by calling \u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m   2872\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mthe model on a batch of data.\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m   2873\u001b[0m layer_utils\u001b[38;5;241m.\u001b[39mprint_summary(\n\u001b[1;32m   2874\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   2875\u001b[0m     line_length\u001b[38;5;241m=\u001b[39mline_length,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   2878\u001b[0m     expand_nested\u001b[38;5;241m=\u001b[39mexpand_nested,\n\u001b[1;32m   2879\u001b[0m     show_trainable\u001b[38;5;241m=\u001b[39mshow_trainable)\n","\u001b[0;31mValueError\u001b[0m: This model has not yet been built. Build the model first by calling `build()` or by calling the model on a batch of data."]}},"pos":24,"start":1657305524173,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305525321,"exec_count":19,"id":"1e2595","input":"model.compile(loss='categorical_crossentropy', optimizer=Adam(learning_rate=0.001), metrics=['accuracy'])","kernel":"ds_env","pos":25,"start":1657305525310,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305525722,"exec_count":20,"id":"b093bf","input":"# train_model = model.fit(X_train, y_train, epochs=60, batch_size=8, verbose = 1, validation_data=(X_test,y_test),callbacks=[callbacks_list])\ntrain_model = model.fit(X_train, y_train, epochs=60, batch_size=8, verbose = 1, validation_data=(X_test,y_test))","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'X_train' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [20]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# train_model = model.fit(X_train, y_train, epochs=60, batch_size=8, verbose = 1, validation_data=(X_test,y_test),callbacks=[callbacks_list])\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m train_model \u001b[38;5;241m=\u001b[39m model\u001b[38;5;241m.\u001b[39mfit(\u001b[43mX_train\u001b[49m, y_train, epochs\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m60\u001b[39m, batch_size\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m8\u001b[39m, verbose \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m, validation_data\u001b[38;5;241m=\u001b[39m(X_test,y_test))\n","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}},"pos":26,"scrolled":true,"start":1657305525714,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305526125,"exec_count":21,"id":"06b0ef","input":"def load_data():\n    train_dataset = pd.read_csv(\"Data/heart_2020_cleaned.csv\")\n    test_dataset = pd.read_csv(\"Data/heart_2020_cleaned.csv\")\n    train_columns = train_dataset.columns\n    train_predictors = train_dataset[train_columns[train_columns != 'target']]\n    train_target = train_dataset['target']\n\n    test_columns = test_dataset.columns\n    test_predictors = test_dataset[test_columns[test_columns != 'target']]\n    test_target = test_dataset['target']\n\n    X_train = train_predictors\n    y_train = train_target\n\n    X_test = test_predictors\n    y_test = test_target\n\n    y_train = to_categorical(y_train)\n    y_test = to_categorical(y_test)\n\n    return X_train, y_train, X_test, y_test","kernel":"ds_env","pos":27,"start":1657305526116,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305526438,"exec_count":22,"id":"1e28b3","input":"def build_model():\n    model = Sequential()\n    model.add(Dense(200, activation='relu', input_shape=(X_train.shape[1],)))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(2, activation='softmax'))\n\n    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n\n    return model","kernel":"ds_env","pos":28,"start":1657305526429,"state":"done","type":"cell"}
{"cell_type":"code","end":1657305658479,"exec_count":25,"id":"755a94","input":"scores = model.evaluate(X_test, y_test)\nprint(f'Accuracy: {scores[1]} \\n Error: {1 - scores[1]}')","kernel":"ds_env","output":{"0":{"ename":"NameError","evalue":"name 'X_test' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m scores \u001b[38;5;241m=\u001b[39m model\u001b[38;5;241m.\u001b[39mevaluate(\u001b[43mX_test\u001b[49m, y_test)\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAccuracy: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mscores[\u001b[38;5;241m1\u001b[39m]\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m Error: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;241m1\u001b[39m \u001b[38;5;241m-\u001b[39m scores[\u001b[38;5;241m1\u001b[39m]\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'X_test' is not defined"]}},"pos":30,"start":1657305658445,"state":"done","type":"cell"}
{"cell_type":"code","end":1657312436480,"exec_count":27,"id":"a33a71","input":"def load_data():\n    train_dataset = pd.read_csv(\"Data/heart_2020_cleaned.csv\")\n    test_dataset = pd.read_csv(\"Data/heart_2020_cleaned.csv\")\n    train_columns = train_dataset.columns\n    train_predictors = train_dataset[train_columns[train_columns != 'target']]\n    train_target = train_dataset['target']\n\n    test_columns = test_dataset.columns\n    test_predictors = test_dataset[test_columns[test_columns != 'target']]\n    test_target = test_dataset['target']\n\n    X_train = train_predictors\n    y_train = train_target\n\n    X_test = test_predictors\n    y_test = test_target\n\n    y_train = to_categorical(y_train)\n    y_test = to_categorical(y_test)\n\n    return X_train, y_train, X_test, y_test\n\n\ndef build_model():\n    model = Sequential()\n    model.add(Dense(200, activation='relu', input_shape=(X_train.shape[1],)))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(200, activation='relu'))\n    model.add(Dense(2, activation='softmax'))\n\n    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n\n    return model\n\n\nX_train, y_train, X_test, y_test = load_data()\n\n# print(f\"Train \\n{X_train} \\n\\n\")\n# print(f\"Test \\n{X_test} \\n\\n\")\n# print(f\"ytrain \\n{y_train} \\n\\n\")\n# print(f\"ytest \\n{y_test} \\n\\n\")\n\nmodel = build_model()\nmodel.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=200, verbose=2)\n\nscores = model.evaluate(X_test, y_test)\nprint(f'Accuracy: {scores[1]} \\n Error: {1 - scores[1]}')","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"'target'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3621\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3620\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:136\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:163\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5198\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5206\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'target'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [27]\u001b[0m, in \u001b[0;36m<cell line: 37>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     32\u001b[0m     model\u001b[38;5;241m.\u001b[39mcompile(optimizer\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124madam\u001b[39m\u001b[38;5;124m'\u001b[39m, loss\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbinary_crossentropy\u001b[39m\u001b[38;5;124m'\u001b[39m, metrics\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124maccuracy\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[1;32m     34\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m model\n\u001b[0;32m---> 37\u001b[0m X_train, y_train, X_test, y_test \u001b[38;5;241m=\u001b[39m \u001b[43mload_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     39\u001b[0m \u001b[38;5;66;03m# print(f\"Train \\n{X_train} \\n\\n\")\u001b[39;00m\n\u001b[1;32m     40\u001b[0m \u001b[38;5;66;03m# print(f\"Test \\n{X_test} \\n\\n\")\u001b[39;00m\n\u001b[1;32m     41\u001b[0m \u001b[38;5;66;03m# print(f\"ytrain \\n{y_train} \\n\\n\")\u001b[39;00m\n\u001b[1;32m     42\u001b[0m \u001b[38;5;66;03m# print(f\"ytest \\n{y_test} \\n\\n\")\u001b[39;00m\n\u001b[1;32m     44\u001b[0m model \u001b[38;5;241m=\u001b[39m build_model()\n","Input \u001b[0;32mIn [27]\u001b[0m, in \u001b[0;36mload_data\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m train_columns \u001b[38;5;241m=\u001b[39m train_dataset\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[1;32m      5\u001b[0m train_predictors \u001b[38;5;241m=\u001b[39m train_dataset[train_columns[train_columns \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n\u001b[0;32m----> 6\u001b[0m train_target \u001b[38;5;241m=\u001b[39m \u001b[43mtrain_dataset\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mtarget\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m      8\u001b[0m test_columns \u001b[38;5;241m=\u001b[39m test_dataset\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[1;32m      9\u001b[0m test_predictors \u001b[38;5;241m=\u001b[39m test_dataset[test_columns[test_columns \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:3505\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3503\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   3504\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 3505\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3506\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   3507\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3623\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[0;32m-> 3623\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   3624\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m   3625\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3626\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3627\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3628\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n","\u001b[0;31mKeyError\u001b[0m: 'target'"]}},"pos":31,"start":1657312435349,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"00dca5","input":"","pos":37,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"432315","input":"","pos":36,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7e65a5","input":"","pos":32,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9a0dbe","input":"","pos":38,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ad6906","input":"","pos":33,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ce8c9e","input":"","pos":35,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cfdd96","input":"","pos":34,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":24,"id":"6421e5","input":"X_train, y_train, X_test, y_test = load_data()\n\nmodel = build_model()\nmodel.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=200, verbose=2)","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"'target'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3621\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3620\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:136\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:163\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5198\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:5206\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'target'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [24]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m X_train, y_train, X_test, y_test \u001b[38;5;241m=\u001b[39m \u001b[43mload_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m      3\u001b[0m model \u001b[38;5;241m=\u001b[39m build_model()\n\u001b[1;32m      4\u001b[0m model\u001b[38;5;241m.\u001b[39mfit(X_train, y_train, validation_data\u001b[38;5;241m=\u001b[39m(X_test, y_test), epochs\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m100\u001b[39m, verbose\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2\u001b[39m)\n","Input \u001b[0;32mIn [21]\u001b[0m, in \u001b[0;36mload_data\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m train_columns \u001b[38;5;241m=\u001b[39m train_dataset\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[1;32m      5\u001b[0m train_predictors \u001b[38;5;241m=\u001b[39m train_dataset[train_columns[train_columns \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n\u001b[0;32m----> 6\u001b[0m train_target \u001b[38;5;241m=\u001b[39m \u001b[43mtrain_dataset\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mtarget\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m      8\u001b[0m test_columns \u001b[38;5;241m=\u001b[39m test_dataset\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[1;32m      9\u001b[0m test_predictors \u001b[38;5;241m=\u001b[39m test_dataset[test_columns[test_columns \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtarget\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:3505\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3503\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   3504\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 3505\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3506\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   3507\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3623\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[0;32m-> 3623\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   3624\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m   3625\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3626\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3627\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3628\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n","\u001b[0;31mKeyError\u001b[0m: 'target'"]}},"pos":29,"state":"done","type":"cell"}
{"cell_type":"code","id":"0aedff","input":"","pos":1,"type":"cell"}
{"cell_type":"code","id":"25dc8e","input":"\n","pos":22,"state":"done","type":"cell"}
{"cell_type":"code","id":"fb53f2","input":"","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"dd3758","input":"Here is a markdown cell\n\n","pos":10,"state":"done","type":"cell"}
{"id":0,"time":1657303054470,"type":"user"}
{"last_load":1657296263053,"type":"file"}